# Change prefix to C-a
set -g prefix C-a
unbind C-b

set -sg escape-time 4
set -g mode-keys vi
set -g set-titles off

set-window-option -g xterm-keys on

set -g mouse on
set -g status-utf8 on
set -g status-justify left
set -g monitor-activity on
set -g visual-activity on
set -g status-left-length 40
setw -g status-fg white
setw -g status-bg colour236
setw -g window-status-fg white
setw -g window-status-bg colour236
setw -g window-status-attr dim
setw -g window-status-current-fg green
setw -g window-status-current-bg colour236
setw -g window-status-current-attr bright
setw -g window-status-activity-attr bold
setw -g window-status-activity-bg colour236
setw -g window-status-activity-fg red
set -g history-limit 1000000

# Send C-a to the app if pressed twice
bind C-a send-prefix
# Reload tmux confs
bind r source-file ~/.tmux.conf \; display "Reloaded"
# Bind Esc to enter in vi-copy mode
bind Escape copy-mode
# Bind v to start visual selection in vi-copy mode
bind -t vi-copy v begin-selection
# Bind V to toggle visual block in vi-copy mode
bind -t vi-copy V rectangle-toggle
# Bind y key in selection mode to copy selection to clipboard
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# Para se evitar que o t√≠tulo de uma janela seja alterado
set-option -g allow-rename off

# Kill window and pane without confirmation
bind x kill-pane
bind & kill-window

# Kill session
bind k confirm-before -p "kill-session? #S" kill-session

# Resize panes
bind-key -n S-M-Up resize-pane -U 2
bind-key -n S-M-Down resize-pane -D 2
bind-key -n S-M-Left resize-pane -L 2
bind-key -n S-M-Right resize-pane -R 2

# Split panes
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Move between windows
bind-key -n M-Right next-window
bind-key -n M-Left previous-window
bind-key -n M-Up switch-client -p
bind-key -n M-Down switch-client -n

# Smart pane switching with awareness of vim splits
# bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-Left if-shell "$is_vim" "send-keys C-Left"  "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-Down"  "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-Up"  "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-Right"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
